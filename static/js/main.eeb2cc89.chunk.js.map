{"version":3,"sources":["Redux/Actions/type.js","Redux/Reducers/dataReducer.js","Redux/store.js","Containers/Gamestart.js","Redux/Actions/Apiactions.js","Containers/Game.js","Containers/Routepath.js","App.js","reportWebVitals.js","index.js"],"names":["GetDictionaryData","GetDictionaryDataFailed","ClearDictionaryData","initialstate","resultapi","inputData","error","middleware","thunk","store","createStore","state","action","type","payload","length","matching","message","compose","applyMiddleware","connect","props","history","useHistory","replayGame","useCallback","dispatch","alert","push","useState","String","fromCharCode","Math","floor","random","inputStr","setStr","counter","setCounter","disable","setDisabled","useEffect","filter","data","word","getRandIn","getranword","ind","parseInt","console","log","substr","toUpperCase","timer","setTimeout","handleKeyup","e","charCode","keyCode","target","value","toLowerCase","fetch","then","Response","json","res","Promise","resolve","catch","reject","id","name","disabled","onKeyDown","preventDefault","handlekeydown","onKeyUp","onChange","clearTimeout","handleChange","Game","onClick","Routepath","path","component","Gamestart","exact","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb2cc89.chunk.js","sourcesContent":["export const GetDictionaryData = \"GetDictionaryData\";\r\nexport const GetDictionaryDataFailed = \"GetDictionaryDataFailed\";\r\nexport const ClearDictionaryData = \"ClearDictionaryData\";","import { GetDictionaryData , GetDictionaryDataFailed , ClearDictionaryData } from '../Actions/type';\r\nconst initialstate = {\r\n    resultapi : null,\r\n    inputData : null,\r\n    error : null\r\n}\r\nexport const reducer = (state = initialstate , action) => {\r\n    const type = action.type;\r\n    switch(type){\r\n        case GetDictionaryData : return { ...state , resultapi : action.payload , length : action.length , inputData : action.matching , error : false} \r\n        case GetDictionaryDataFailed : return  {...state , message : action.payload , error : true }\r\n        case ClearDictionaryData : return { ...state , resultapi : action.payload , error : false} \r\n        default : return state\r\n    }\r\n}","import { createStore, applyMiddleware , compose} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer } from './Reducers/dataReducer';\r\nconst middleware = [thunk];\r\nconst store = createStore(reducer , compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React , { useEffect , useState , useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { getApiData , clearDictionary } from '../Redux/Actions/Apiactions';\r\n\r\nconst Gamestart = (props) => {\r\n    var timer ;\r\n    const history = useHistory();\r\n    const replayGame = useCallback(() => {\r\n        props.dispatch(clearDictionary());\r\n        alert(\"you loose game\");\r\n        history.push('/');\r\n    },[history,props]);\r\n    const [inputStr , setStr] = useState(String.fromCharCode(65+Math.floor(Math.random() * 26)));\r\n    const [counter , setCounter] = useState(60);\r\n    const [disable , setDisabled] = useState('false');\r\n    \r\n    useEffect(() => {\r\n        if(props.resultapi){\r\n            if(props.resultapi.length > 0){\r\n                let result = (props.resultapi).filter((data) => data.word === props.inputData);\r\n                if(result.length > 0) {return replayGame();}\r\n                else{\r\n                    var getRandIn =  Math.floor(Math.random() * (props.resultapi).length);\r\n                    var getranword = (props.resultapi).filter((data,ind) => ind === parseInt(getRandIn))[0].word;\r\n                    console.log(getranword)\r\n                    setStr(getranword.substr(0,props.length+1).toUpperCase());\r\n                    // myFunction(60);\r\n                    setDisabled('false')\r\n                }\r\n            }else{\r\n                return replayGame();\r\n            }\r\n        }\r\n       \r\n    } , [props.resultapi , props.length , props.inputData , replayGame ])\r\n\r\n    useEffect((timer) => {\r\n        timer = (counter > 0 && setTimeout(() =>  setCounter(counter - 1), 1000));\r\n        if(counter === 0) return replayGame();\r\n    } , [counter , replayGame])\r\n   \r\n    // const myFunction = () => {\r\n    //      timer = counter > 0 && setTimeout(() => { setCounter(counter - 1);\r\n    //     clearTimeout(timer);}, 1000);\r\n    //     counter == 0 && replayGame();\r\n    // }\r\n\r\n    \r\n\r\n    const handleKeyup = (e) => {\r\n        var charCode = e.keyCode;\r\n\r\n        if(charCode > 64 && charCode < 91 )\r\n        {\r\n        props.dispatch(getApiData((e.target.value).toLowerCase()));\r\n        setDisabled('true')\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        clearTimeout(timer)\r\n        setCounter(60);\r\n        setStr((e.target.value).toUpperCase())\r\n    }\r\n\r\n    const handlekeydown = (e) => {\r\n        var charCode = e.keyCode;\r\n        if (charCode < 64 || charCode > 91 ) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>Computer V/S Human being</div>\r\n        <label>Timer : </label><span id=\"timer\">{counter < 10 ? '00:0' + counter : '00:' + counter}</span>\r\n        <br />\r\n        <input type='text' name='gaminginput' value={inputStr} disabled={ disable === 'true' ? true : false} onKeyDown={(e)=> handlekeydown(e)} onKeyUp={(e) => handleKeyup(e)} onChange={(e) => handleChange(e)} />\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n}\r\nexport default connect(mapStateToProps)(Gamestart);\r\n","import { GetDictionaryData , GetDictionaryDataFailed , ClearDictionaryData } from './type';\r\nconst getApiData = (word) => (dispatch) => {\r\n    fetch('https://api.datamuse.com/words?sp=' + word + '?').then((Response)=>{\r\n        return Response.json()\r\n    }).then(\r\n        (res) => {\r\n            dispatch({\r\n                type : GetDictionaryData,\r\n                matching : word,\r\n                length : word.length,\r\n                payload : res\r\n            })\r\n            return Promise.resolve();\r\n        }\r\n    ).catch((error) => {\r\n        dispatch({\r\n            type : GetDictionaryDataFailed,\r\n            payload : error\r\n        })\r\n        return Promise.reject();\r\n    });\r\n}\r\nconst clearDictionary = () => (dispatch) => {\r\n    \r\n    dispatch({\r\n        type : ClearDictionaryData,\r\n        payload : null\r\n    })\r\n}\r\nexport { getApiData , clearDictionary }","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Game = () => {\r\n    const history = useHistory();\r\n    const handleclick = () => {\r\n        history.push('/game');\r\n    }\r\n    return (\r\n        <>\r\n        <button onClick={handleclick}>Play Game</button>\r\n        </>\r\n    )\r\n}\r\nexport default Game;","import React from 'react';\r\n// import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport Gamestart from './Gamestart';\r\nimport Game from './Game'\r\nconst Routepath = () => {\r\n    return (\r\n        <Router>\r\n            {/* <switch> */}\r\n            <Route path='/game' component={Gamestart} /> \r\n            <Route exact path='/' component={Game} /> \r\n            {/* </switch> */}\r\n        </Router>\r\n        \r\n    )\r\n}\r\nexport default Routepath;","// import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\nimport Routepath from './Containers/Routepath';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routepath />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}